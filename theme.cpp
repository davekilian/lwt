
#include "theme.h"

Theme::Theme()
{
    setDefault();
}

Theme::~Theme() { }

QColor Theme::color(int index) const
{
    return m_palette.value(index, QColor(255, 0, 255));
}

void Theme::setColor(int index, const QColor &c)
{
    if (index >= 0 && index <= 255)
        m_palette[index] = c;
}

static QColor g_xterm256[] = 
{
    QColor(0xff000000),
    QColor(0xff800000),
    QColor(0xff008000),
    QColor(0xff808000),
    QColor(0xff000080),
    QColor(0xff800080),
    QColor(0xff008080),
    QColor(0xffc0c0c0),
    QColor(0xff808080),
    QColor(0xffff0000),
    QColor(0xff00ff00),
    QColor(0xffffff00),
    QColor(0xff0000ff),
    QColor(0xffff00ff),
    QColor(0xff00ffff),
    QColor(0xffffffff),
    QColor(0xff000000),
    QColor(0xff00005f),
    QColor(0xff000087),
    QColor(0xff0000af),
    QColor(0xff0000d7),
    QColor(0xff0000ff),
    QColor(0xff005f00),
    QColor(0xff005f5f),
    QColor(0xff005f87),
    QColor(0xff005faf),
    QColor(0xff005fd7),
    QColor(0xff005fff),
    QColor(0xff008700),
    QColor(0xff00875f),
    QColor(0xff008787),
    QColor(0xff0087af),
    QColor(0xff0087d7),
    QColor(0xff0087ff),
    QColor(0xff00af00),
    QColor(0xff00af5f),
    QColor(0xff00af87),
    QColor(0xff00afaf),
    QColor(0xff00afd7),
    QColor(0xff00afff),
    QColor(0xff00d700),
    QColor(0xff00d75f),
    QColor(0xff00d787),
    QColor(0xff00d7af),
    QColor(0xff00d7d7),
    QColor(0xff00d7ff),
    QColor(0xff00ff00),
    QColor(0xff00ff5f),
    QColor(0xff00ff87),
    QColor(0xff00ffaf),
    QColor(0xff00ffd7),
    QColor(0xff00ffff),
    QColor(0xff5f0000),
    QColor(0xff5f005f),
    QColor(0xff5f0087),
    QColor(0xff5f00af),
    QColor(0xff5f00d7),
    QColor(0xff5f00ff),
    QColor(0xff5f5f00),
    QColor(0xff5f5f5f),
    QColor(0xff5f5f87),
    QColor(0xff5f5faf),
    QColor(0xff5f5fd7),
    QColor(0xff5f5fff),
    QColor(0xff5f8700),
    QColor(0xff5f875f),
    QColor(0xff5f8787),
    QColor(0xff5f87af),
    QColor(0xff5f87d7),
    QColor(0xff5f87ff),
    QColor(0xff5faf00),
    QColor(0xff5faf5f),
    QColor(0xff5faf87),
    QColor(0xff5fafaf),
    QColor(0xff5fafd7),
    QColor(0xff5fafff),
    QColor(0xff5fd700),
    QColor(0xff5fd75f),
    QColor(0xff5fd787),
    QColor(0xff5fd7af),
    QColor(0xff5fd7d7),
    QColor(0xff5fd7ff),
    QColor(0xff5fff00),
    QColor(0xff5fff5f),
    QColor(0xff5fff87),
    QColor(0xff5fffaf),
    QColor(0xff5fffd7),
    QColor(0xff5fffff),
    QColor(0xff870000),
    QColor(0xff87005f),
    QColor(0xff870087),
    QColor(0xff8700af),
    QColor(0xff8700d7),
    QColor(0xff8700ff),
    QColor(0xff875f00),
    QColor(0xff875f5f),
    QColor(0xff875f87),
    QColor(0xff875faf),
    QColor(0xff875fd7),
    QColor(0xff875fff),
    QColor(0xff878700),
    QColor(0xff87875f),
    QColor(0xff878787),
    QColor(0xff8787af),
    QColor(0xff8787d7),
    QColor(0xff8787ff),
    QColor(0xff87af00),
    QColor(0xff87af5f),
    QColor(0xff87af87),
    QColor(0xff87afaf),
    QColor(0xff87afd7),
    QColor(0xff87afff),
    QColor(0xff87d700),
    QColor(0xff87d75f),
    QColor(0xff87d787),
    QColor(0xff87d7af),
    QColor(0xff87d7d7),
    QColor(0xff87d7ff),
    QColor(0xff87ff00),
    QColor(0xff87ff5f),
    QColor(0xff87ff87),
    QColor(0xff87ffaf),
    QColor(0xff87ffd7),
    QColor(0xff87ffff),
    QColor(0xffaf0000),
    QColor(0xffaf005f),
    QColor(0xffaf0087),
    QColor(0xffaf00af),
    QColor(0xffaf00d7),
    QColor(0xffaf00ff),
    QColor(0xffaf5f00),
    QColor(0xffaf5f5f),
    QColor(0xffaf5f87),
    QColor(0xffaf5faf),
    QColor(0xffaf5fd7),
    QColor(0xffaf5fff),
    QColor(0xffaf8700),
    QColor(0xffaf875f),
    QColor(0xffaf8787),
    QColor(0xffaf87af),
    QColor(0xffaf87d7),
    QColor(0xffaf87ff),
    QColor(0xffafaf00),
    QColor(0xffafaf5f),
    QColor(0xffafaf87),
    QColor(0xffafafaf),
    QColor(0xffafafd7),
    QColor(0xffafafff),
    QColor(0xffafd700),
    QColor(0xffafd75f),
    QColor(0xffafd787),
    QColor(0xffafd7af),
    QColor(0xffafd7d7),
    QColor(0xffafd7ff),
    QColor(0xffafff00),
    QColor(0xffafff5f),
    QColor(0xffafff87),
    QColor(0xffafffaf),
    QColor(0xffafffd7),
    QColor(0xffafffff),
    QColor(0xffd70000),
    QColor(0xffd7005f),
    QColor(0xffd70087),
    QColor(0xffd700af),
    QColor(0xffd700d7),
    QColor(0xffd700ff),
    QColor(0xffd75f00),
    QColor(0xffd75f5f),
    QColor(0xffd75f87),
    QColor(0xffd75faf),
    QColor(0xffd75fd7),
    QColor(0xffd75fff),
    QColor(0xffd78700),
    QColor(0xffd7875f),
    QColor(0xffd78787),
    QColor(0xffd787af),
    QColor(0xffd787d7),
    QColor(0xffd787ff),
    QColor(0xffd7af00),
    QColor(0xffd7af5f),
    QColor(0xffd7af87),
    QColor(0xffd7afaf),
    QColor(0xffd7afd7),
    QColor(0xffd7afff),
    QColor(0xffd7d700),
    QColor(0xffd7d75f),
    QColor(0xffd7d787),
    QColor(0xffd7d7af),
    QColor(0xffd7d7d7),
    QColor(0xffd7d7ff),
    QColor(0xffd7ff00),
    QColor(0xffd7ff5f),
    QColor(0xffd7ff87),
    QColor(0xffd7ffaf),
    QColor(0xffd7ffd7),
    QColor(0xffd7ffff),
    QColor(0xffff0000),
    QColor(0xffff005f),
    QColor(0xffff0087),
    QColor(0xffff00af),
    QColor(0xffff00d7),
    QColor(0xffff00ff),
    QColor(0xffff5f00),
    QColor(0xffff5f5f),
    QColor(0xffff5f87),
    QColor(0xffff5faf),
    QColor(0xffff5fd7),
    QColor(0xffff5fff),
    QColor(0xffff8700),
    QColor(0xffff875f),
    QColor(0xffff8787),
    QColor(0xffff87af),
    QColor(0xffff87d7),
    QColor(0xffff87ff),
    QColor(0xffffaf00),
    QColor(0xffffaf5f),
    QColor(0xffffaf87),
    QColor(0xffffafaf),
    QColor(0xffffafd7),
    QColor(0xffffafff),
    QColor(0xffffd700),
    QColor(0xffffd75f),
    QColor(0xffffd787),
    QColor(0xffffd7af),
    QColor(0xffffd7d7),
    QColor(0xffffd7ff),
    QColor(0xffffff00),
    QColor(0xffffff5f),
    QColor(0xffffff87),
    QColor(0xffffffaf),
    QColor(0xffffffd7),
    QColor(0xffffffff),
    QColor(0xff080808),
    QColor(0xff121212),
    QColor(0xff1c1c1c),
    QColor(0xff262626),
    QColor(0xff303030),
    QColor(0xff3a3a3a),
    QColor(0xff444444),
    QColor(0xff4e4e4e),
    QColor(0xff585858),
    QColor(0xff626262),
    QColor(0xff6c6c6c),
    QColor(0xff767676),
    QColor(0xff808080),
    QColor(0xff8a8a8a),
    QColor(0xff949494),
    QColor(0xff9e9e9e),
    QColor(0xffa8a8a8),
    QColor(0xffb2b2b2),
    QColor(0xffbcbcbc),
    QColor(0xffc6c6c6),
    QColor(0xffd0d0d0),
    QColor(0xffdadada),
    QColor(0xffe4e4e4),
    QColor(0xffeeeeee),
};

static QColor g_solarized[] = 
{
    QColor(0xff073642),
    QColor(0xffdc322f),
    QColor(0xff859900),
    QColor(0xffb58900),
    QColor(0xff268bd2),
    QColor(0xffd33682),
    QColor(0xff2aa198),
    QColor(0xffeee8d5),
    QColor(0xff002b36),
    QColor(0xffcb4b16),
    QColor(0xff586e75),
    QColor(0xff657b83),
    QColor(0xff839496),
    QColor(0xff6c71c4),
    QColor(0xff93a1a1),
    QColor(0xfffdf6e3),
};

void Theme::setDefault()
{
    for (int i = 0; i < 256; ++i)
        m_palette.append(g_xterm256[i]);

    // XXX personal preference
    //     replace this with a file once theme-loading works
    for (int i = 0; i < 16; ++i)
        m_palette[i] = g_solarized[i];
}

